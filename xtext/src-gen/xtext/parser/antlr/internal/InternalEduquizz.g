/*
 * generated by Xtext 2.36.0
 */
grammar InternalEduquizz;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import xtext.services.EduquizzGrammarAccess;

}

@parser::members {

 	private EduquizzGrammarAccess grammarAccess;

    public InternalEduquizzParser(TokenStream input, EduquizzGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Questionnaire";
   	}

   	@Override
   	protected EduquizzGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestionnaireRule()); }
	iv_ruleQuestionnaire=ruleQuestionnaire
	{ $current=$iv_ruleQuestionnaire.current; }
	EOF;

// Rule Questionnaire
ruleQuestionnaire returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Questionnaire'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='nom'
			{
				newLeafNode(otherlv_2, grammarAccess.getQuestionnaireAccess().getNomKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionnaireAccess().getNomEStringParserRuleCall_2_1_0());
					}
					lv_nom_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
						}
						set(
							$current,
							"nom",
							lv_nom_3_0,
							"xtext.Eduquizz.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='resultat'
			{
				newLeafNode(otherlv_4, grammarAccess.getQuestionnaireAccess().getResultatKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionnaireAccess().getResultatEDoubleParserRuleCall_3_1_0());
					}
					lv_resultat_5_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
						}
						set(
							$current,
							"resultat",
							lv_resultat_5_0,
							"xtext.Eduquizz.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='retourAutorise'
			{
				newLeafNode(otherlv_6, grammarAccess.getQuestionnaireAccess().getRetourAutoriseKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionnaireAccess().getRetourAutoriseEBooleanParserRuleCall_4_1_0());
					}
					lv_retourAutorise_7_0=ruleEBoolean
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
						}
						set(
							$current,
							"retourAutorise",
							lv_retourAutorise_7_0,
							"xtext.Eduquizz.EBoolean");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='melange'
			{
				newLeafNode(otherlv_8, grammarAccess.getQuestionnaireAccess().getMelangeKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionnaireAccess().getMelangeEBooleanParserRuleCall_5_1_0());
					}
					lv_melange_9_0=ruleEBoolean
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
						}
						set(
							$current,
							"melange",
							lv_melange_9_0,
							"xtext.Eduquizz.EBoolean");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='question'
		{
			newLeafNode(otherlv_10, grammarAccess.getQuestionnaireAccess().getQuestionKeyword_6());
		}
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuestionnaireAccess().getQuestionQuestionParserRuleCall_8_0());
				}
				lv_question_12_0=ruleQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
					}
					add(
						$current,
						"question",
						lv_question_12_0,
						"xtext.Eduquizz.Question");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13=','
			{
				newLeafNode(otherlv_13, grammarAccess.getQuestionnaireAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionnaireAccess().getQuestionQuestionParserRuleCall_9_1_0());
					}
					lv_question_14_0=ruleQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
						}
						add(
							$current,
							"question",
							lv_question_14_0,
							"xtext.Eduquizz.Question");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getQuestionnaireAccess().getRightCurlyBracketKeyword_10());
		}
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getQuestionnaireAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleQuestion
entryRuleQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	iv_ruleQuestion=ruleQuestion
	{ $current=$iv_ruleQuestion.current; }
	EOF;

// Rule Question
ruleQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_reponsesMultiples_0_0='reponsesMultiples'
				{
					newLeafNode(lv_reponsesMultiples_0_0, grammarAccess.getQuestionAccess().getReponsesMultiplesReponsesMultiplesKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuestionRule());
					}
					setWithLastConsumed($current, "reponsesMultiples", lv_reponsesMultiples_0_0 != null, "reponsesMultiples");
				}
			)
		)?
		otherlv_1='Question'
		{
			newLeafNode(otherlv_1, grammarAccess.getQuestionAccess().getQuestionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='ennonce'
			{
				newLeafNode(otherlv_3, grammarAccess.getQuestionAccess().getEnnonceKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionAccess().getEnnonceEStringParserRuleCall_3_1_0());
					}
					lv_ennonce_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionRule());
						}
						set(
							$current,
							"ennonce",
							lv_ennonce_4_0,
							"xtext.Eduquizz.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='difficulte'
			{
				newLeafNode(otherlv_5, grammarAccess.getQuestionAccess().getDifficulteKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionAccess().getDifficulteEIntParserRuleCall_4_1_0());
					}
					lv_difficulte_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionRule());
						}
						set(
							$current,
							"difficulte",
							lv_difficulte_6_0,
							"xtext.Eduquizz.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='etiquette'
			{
				newLeafNode(otherlv_7, grammarAccess.getQuestionAccess().getEtiquetteKeyword_5_0());
			}
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getQuestionAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionAccess().getEtiquetteEtiquetteParserRuleCall_5_2_0());
					}
					lv_etiquette_9_0=ruleEtiquette
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionRule());
						}
						add(
							$current,
							"etiquette",
							lv_etiquette_9_0,
							"xtext.Eduquizz.Etiquette");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getQuestionAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getQuestionAccess().getEtiquetteEtiquetteParserRuleCall_5_3_1_0());
						}
						lv_etiquette_11_0=ruleEtiquette
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQuestionRule());
							}
							add(
								$current,
								"etiquette",
								lv_etiquette_11_0,
								"xtext.Eduquizz.Etiquette");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getQuestionAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		otherlv_13='reponse'
		{
			newLeafNode(otherlv_13, grammarAccess.getQuestionAccess().getReponseKeyword_6());
		}
		otherlv_14='{'
		{
			newLeafNode(otherlv_14, grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuestionAccess().getReponseReponseParserRuleCall_8_0());
				}
				lv_reponse_15_0=ruleReponse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuestionRule());
					}
					add(
						$current,
						"reponse",
						lv_reponse_15_0,
						"xtext.Eduquizz.Reponse");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_16=','
			{
				newLeafNode(otherlv_16, grammarAccess.getQuestionAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionAccess().getReponseReponseParserRuleCall_9_1_0());
					}
					lv_reponse_17_0=ruleReponse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionRule());
						}
						add(
							$current,
							"reponse",
							lv_reponse_17_0,
							"xtext.Eduquizz.Reponse");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_10());
		}
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEtiquette
entryRuleEtiquette returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEtiquetteRule()); }
	iv_ruleEtiquette=ruleEtiquette
	{ $current=$iv_ruleEtiquette.current; }
	EOF;

// Rule Etiquette
ruleEtiquette returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEtiquetteAccess().getEtiquetteAction_0(),
					$current);
			}
		)
		otherlv_1='Etiquette'
		{
			newLeafNode(otherlv_1, grammarAccess.getEtiquetteAccess().getEtiquetteKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEtiquetteAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='nom'
			{
				newLeafNode(otherlv_3, grammarAccess.getEtiquetteAccess().getNomKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEtiquetteAccess().getNomEStringParserRuleCall_3_1_0());
					}
					lv_nom_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEtiquetteRule());
						}
						set(
							$current,
							"nom",
							lv_nom_4_0,
							"xtext.Eduquizz.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getEtiquetteAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReponse
entryRuleReponse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReponseRule()); }
	iv_ruleReponse=ruleReponse
	{ $current=$iv_ruleReponse.current; }
	EOF;

// Rule Reponse
ruleReponse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReponseAccess().getReponseAction_0(),
					$current);
			}
		)
		(
			(
				lv_estVraie_1_0='estVraie'
				{
					newLeafNode(lv_estVraie_1_0, grammarAccess.getReponseAccess().getEstVraieEstVraieKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReponseRule());
					}
					setWithLastConsumed($current, "estVraie", lv_estVraie_1_0 != null, "estVraie");
				}
			)
		)?
		otherlv_2='Reponse'
		{
			newLeafNode(otherlv_2, grammarAccess.getReponseAccess().getReponseKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getReponseAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='texte'
			{
				newLeafNode(otherlv_4, grammarAccess.getReponseAccess().getTexteKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReponseAccess().getTexteEStringParserRuleCall_4_1_0());
					}
					lv_texte_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReponseRule());
						}
						set(
							$current,
							"texte",
							lv_texte_5_0,
							"xtext.Eduquizz.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getReponseAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
