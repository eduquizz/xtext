/*
 * generated by Xtext 2.36.0
 */
package xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EduquizzGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class QuestionnaireElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Eduquizz.Questionnaire");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQuestionnaireKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNomKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNomAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNomEStringParserRuleCall_2_1_0 = (RuleCall)cNomAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cResultatKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cResultatAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cResultatEDoubleParserRuleCall_3_1_0 = (RuleCall)cResultatAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRetourAutoriseKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRetourAutoriseAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRetourAutoriseEBooleanParserRuleCall_4_1_0 = (RuleCall)cRetourAutoriseAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMelangeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMelangeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMelangeEBooleanParserRuleCall_5_1_0 = (RuleCall)cMelangeAssignment_5_1.eContents().get(0);
		private final Keyword cQuestionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cQuestionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cQuestionQuestionParserRuleCall_8_0 = (RuleCall)cQuestionAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cQuestionAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cQuestionQuestionParserRuleCall_9_1_0 = (RuleCall)cQuestionAssignment_9_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Questionnaire returns Questionnaire:
		//    'Questionnaire'
		//    '{'
		//        ('nom' nom=EString)?
		//        ('resultat' resultat=EDouble)?
		//        ('retourAutorise' retourAutorise=EBoolean)?
		//        ('melange' melange=EBoolean)?
		//        'question' '{' question+=Question ( "," question+=Question)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Questionnaire'
		//'{'
		//    ('nom' nom=EString)?
		//    ('resultat' resultat=EDouble)?
		//    ('retourAutorise' retourAutorise=EBoolean)?
		//    ('melange' melange=EBoolean)?
		//    'question' '{' question+=Question ( "," question+=Question)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Questionnaire'
		public Keyword getQuestionnaireKeyword_0() { return cQuestionnaireKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('nom' nom=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'nom'
		public Keyword getNomKeyword_2_0() { return cNomKeyword_2_0; }
		
		//nom=EString
		public Assignment getNomAssignment_2_1() { return cNomAssignment_2_1; }
		
		//EString
		public RuleCall getNomEStringParserRuleCall_2_1_0() { return cNomEStringParserRuleCall_2_1_0; }
		
		//('resultat' resultat=EDouble)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'resultat'
		public Keyword getResultatKeyword_3_0() { return cResultatKeyword_3_0; }
		
		//resultat=EDouble
		public Assignment getResultatAssignment_3_1() { return cResultatAssignment_3_1; }
		
		//EDouble
		public RuleCall getResultatEDoubleParserRuleCall_3_1_0() { return cResultatEDoubleParserRuleCall_3_1_0; }
		
		//('retourAutorise' retourAutorise=EBoolean)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'retourAutorise'
		public Keyword getRetourAutoriseKeyword_4_0() { return cRetourAutoriseKeyword_4_0; }
		
		//retourAutorise=EBoolean
		public Assignment getRetourAutoriseAssignment_4_1() { return cRetourAutoriseAssignment_4_1; }
		
		//EBoolean
		public RuleCall getRetourAutoriseEBooleanParserRuleCall_4_1_0() { return cRetourAutoriseEBooleanParserRuleCall_4_1_0; }
		
		//('melange' melange=EBoolean)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'melange'
		public Keyword getMelangeKeyword_5_0() { return cMelangeKeyword_5_0; }
		
		//melange=EBoolean
		public Assignment getMelangeAssignment_5_1() { return cMelangeAssignment_5_1; }
		
		//EBoolean
		public RuleCall getMelangeEBooleanParserRuleCall_5_1_0() { return cMelangeEBooleanParserRuleCall_5_1_0; }
		
		//'question'
		public Keyword getQuestionKeyword_6() { return cQuestionKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//question+=Question
		public Assignment getQuestionAssignment_8() { return cQuestionAssignment_8; }
		
		//Question
		public RuleCall getQuestionQuestionParserRuleCall_8_0() { return cQuestionQuestionParserRuleCall_8_0; }
		
		//( "," question+=Question)*
		public Group getGroup_9() { return cGroup_9; }
		
		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//question+=Question
		public Assignment getQuestionAssignment_9_1() { return cQuestionAssignment_9_1; }
		
		//Question
		public RuleCall getQuestionQuestionParserRuleCall_9_1_0() { return cQuestionQuestionParserRuleCall_9_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Eduquizz.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Eduquizz.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble returns ecore::EDouble:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Eduquizz.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class QuestionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Eduquizz.Question");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReponsesMultiplesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cReponsesMultiplesReponsesMultiplesKeyword_0_0 = (Keyword)cReponsesMultiplesAssignment_0.eContents().get(0);
		private final Keyword cQuestionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEnnonceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cEnnonceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cEnnonceEStringParserRuleCall_3_1_0 = (RuleCall)cEnnonceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDifficulteKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDifficulteAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDifficulteEIntParserRuleCall_4_1_0 = (RuleCall)cDifficulteAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEtiquetteKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cEtiquetteAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cEtiquetteEtiquetteParserRuleCall_5_2_0 = (RuleCall)cEtiquetteAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cEtiquetteAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cEtiquetteEtiquetteParserRuleCall_5_3_1_0 = (RuleCall)cEtiquetteAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cReponseKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cReponseAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cReponseReponseParserRuleCall_8_0 = (RuleCall)cReponseAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cReponseAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cReponseReponseParserRuleCall_9_1_0 = (RuleCall)cReponseAssignment_9_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Question returns Question:
		//    (reponsesMultiples?='reponsesMultiples')?
		//    'Question'
		//    '{'
		//        ('ennonce' ennonce=EString)?
		//        ('difficulte' difficulte=EInt)?
		//        ('etiquette' '(' etiquette+=Etiquette ( "," etiquette+=Etiquette)* ')' )?
		//        'reponse' '{' reponse+=Reponse ( "," reponse+=Reponse)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//(reponsesMultiples?='reponsesMultiples')?
		//'Question'
		//'{'
		//    ('ennonce' ennonce=EString)?
		//    ('difficulte' difficulte=EInt)?
		//    ('etiquette' '(' etiquette+=Etiquette ( "," etiquette+=Etiquette)* ')' )?
		//    'reponse' '{' reponse+=Reponse ( "," reponse+=Reponse)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(reponsesMultiples?='reponsesMultiples')?
		public Assignment getReponsesMultiplesAssignment_0() { return cReponsesMultiplesAssignment_0; }
		
		//'reponsesMultiples'
		public Keyword getReponsesMultiplesReponsesMultiplesKeyword_0_0() { return cReponsesMultiplesReponsesMultiplesKeyword_0_0; }
		
		//'Question'
		public Keyword getQuestionKeyword_1() { return cQuestionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('ennonce' ennonce=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'ennonce'
		public Keyword getEnnonceKeyword_3_0() { return cEnnonceKeyword_3_0; }
		
		//ennonce=EString
		public Assignment getEnnonceAssignment_3_1() { return cEnnonceAssignment_3_1; }
		
		//EString
		public RuleCall getEnnonceEStringParserRuleCall_3_1_0() { return cEnnonceEStringParserRuleCall_3_1_0; }
		
		//('difficulte' difficulte=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'difficulte'
		public Keyword getDifficulteKeyword_4_0() { return cDifficulteKeyword_4_0; }
		
		//difficulte=EInt
		public Assignment getDifficulteAssignment_4_1() { return cDifficulteAssignment_4_1; }
		
		//EInt
		public RuleCall getDifficulteEIntParserRuleCall_4_1_0() { return cDifficulteEIntParserRuleCall_4_1_0; }
		
		//('etiquette' '(' etiquette+=Etiquette ( "," etiquette+=Etiquette)* ')' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'etiquette'
		public Keyword getEtiquetteKeyword_5_0() { return cEtiquetteKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//etiquette+=Etiquette
		public Assignment getEtiquetteAssignment_5_2() { return cEtiquetteAssignment_5_2; }
		
		//Etiquette
		public RuleCall getEtiquetteEtiquetteParserRuleCall_5_2_0() { return cEtiquetteEtiquetteParserRuleCall_5_2_0; }
		
		//( "," etiquette+=Etiquette)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//etiquette+=Etiquette
		public Assignment getEtiquetteAssignment_5_3_1() { return cEtiquetteAssignment_5_3_1; }
		
		//Etiquette
		public RuleCall getEtiquetteEtiquetteParserRuleCall_5_3_1_0() { return cEtiquetteEtiquetteParserRuleCall_5_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//'reponse'
		public Keyword getReponseKeyword_6() { return cReponseKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//reponse+=Reponse
		public Assignment getReponseAssignment_8() { return cReponseAssignment_8; }
		
		//Reponse
		public RuleCall getReponseReponseParserRuleCall_8_0() { return cReponseReponseParserRuleCall_8_0; }
		
		//( "," reponse+=Reponse)*
		public Group getGroup_9() { return cGroup_9; }
		
		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//reponse+=Reponse
		public Assignment getReponseAssignment_9_1() { return cReponseAssignment_9_1; }
		
		//Reponse
		public RuleCall getReponseReponseParserRuleCall_9_1_0() { return cReponseReponseParserRuleCall_9_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Eduquizz.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EtiquetteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Eduquizz.Etiquette");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEtiquetteAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEtiquetteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNomKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNomAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNomEStringParserRuleCall_3_1_0 = (RuleCall)cNomAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Etiquette returns Etiquette:
		//    {Etiquette}
		//    'Etiquette'
		//    '{'
		//        ('nom' nom=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Etiquette}
		//'Etiquette'
		//'{'
		//    ('nom' nom=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Etiquette}
		public Action getEtiquetteAction_0() { return cEtiquetteAction_0; }
		
		//'Etiquette'
		public Keyword getEtiquetteKeyword_1() { return cEtiquetteKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('nom' nom=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'nom'
		public Keyword getNomKeyword_3_0() { return cNomKeyword_3_0; }
		
		//nom=EString
		public Assignment getNomAssignment_3_1() { return cNomAssignment_3_1; }
		
		//EString
		public RuleCall getNomEStringParserRuleCall_3_1_0() { return cNomEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ReponseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.Eduquizz.Reponse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReponseAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cEstVraieAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cEstVraieEstVraieKeyword_1_0 = (Keyword)cEstVraieAssignment_1.eContents().get(0);
		private final Keyword cReponseKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTexteKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTexteAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTexteEStringParserRuleCall_4_1_0 = (RuleCall)cTexteAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Reponse returns Reponse:
		//    {Reponse}
		//    (estVraie?='estVraie')?
		//    'Reponse'
		//    '{'
		//        ('texte' texte=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Reponse}
		//(estVraie?='estVraie')?
		//'Reponse'
		//'{'
		//    ('texte' texte=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Reponse}
		public Action getReponseAction_0() { return cReponseAction_0; }
		
		//(estVraie?='estVraie')?
		public Assignment getEstVraieAssignment_1() { return cEstVraieAssignment_1; }
		
		//'estVraie'
		public Keyword getEstVraieEstVraieKeyword_1_0() { return cEstVraieEstVraieKeyword_1_0; }
		
		//'Reponse'
		public Keyword getReponseKeyword_2() { return cReponseKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('texte' texte=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'texte'
		public Keyword getTexteKeyword_4_0() { return cTexteKeyword_4_0; }
		
		//texte=EString
		public Assignment getTexteAssignment_4_1() { return cTexteAssignment_4_1; }
		
		//EString
		public RuleCall getTexteEStringParserRuleCall_4_1_0() { return cTexteEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	
	private final QuestionnaireElements pQuestionnaire;
	private final EStringElements pEString;
	private final EDoubleElements pEDouble;
	private final EBooleanElements pEBoolean;
	private final QuestionElements pQuestion;
	private final EIntElements pEInt;
	private final EtiquetteElements pEtiquette;
	private final ReponseElements pReponse;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EduquizzGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pQuestionnaire = new QuestionnaireElements();
		this.pEString = new EStringElements();
		this.pEDouble = new EDoubleElements();
		this.pEBoolean = new EBooleanElements();
		this.pQuestion = new QuestionElements();
		this.pEInt = new EIntElements();
		this.pEtiquette = new EtiquetteElements();
		this.pReponse = new ReponseElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("xtext.Eduquizz".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Questionnaire returns Questionnaire:
	//    'Questionnaire'
	//    '{'
	//        ('nom' nom=EString)?
	//        ('resultat' resultat=EDouble)?
	//        ('retourAutorise' retourAutorise=EBoolean)?
	//        ('melange' melange=EBoolean)?
	//        'question' '{' question+=Question ( "," question+=Question)* '}'
	//    '}';
	public QuestionnaireElements getQuestionnaireAccess() {
		return pQuestionnaire;
	}
	
	public ParserRule getQuestionnaireRule() {
		return getQuestionnaireAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Question returns Question:
	//    (reponsesMultiples?='reponsesMultiples')?
	//    'Question'
	//    '{'
	//        ('ennonce' ennonce=EString)?
	//        ('difficulte' difficulte=EInt)?
	//        ('etiquette' '(' etiquette+=Etiquette ( "," etiquette+=Etiquette)* ')' )?
	//        'reponse' '{' reponse+=Reponse ( "," reponse+=Reponse)* '}'
	//    '}';
	public QuestionElements getQuestionAccess() {
		return pQuestion;
	}
	
	public ParserRule getQuestionRule() {
		return getQuestionAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//Etiquette returns Etiquette:
	//    {Etiquette}
	//    'Etiquette'
	//    '{'
	//        ('nom' nom=EString)?
	//    '}';
	public EtiquetteElements getEtiquetteAccess() {
		return pEtiquette;
	}
	
	public ParserRule getEtiquetteRule() {
		return getEtiquetteAccess().getRule();
	}
	
	//Reponse returns Reponse:
	//    {Reponse}
	//    (estVraie?='estVraie')?
	//    'Reponse'
	//    '{'
	//        ('texte' texte=EString)?
	//    '}';
	public ReponseElements getReponseAccess() {
		return pReponse;
	}
	
	public ParserRule getReponseRule() {
		return getReponseAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
